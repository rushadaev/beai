rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Base rules
    match /{document=**} {
      // By default, deny all reads and writes
      allow read, write: if false;
    }
    
    // User profiles - users can read/write only their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Chatbots - users can only manage their own chatbots
    match /chatbots/{chatbotId} {
      // Allow read if user is authenticated and is the owner of the chatbot
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Allow create if user is authenticated and is setting themselves as owner
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Allow update if user is authenticated and is the owner (and not changing ownership)
      allow update: if request.auth != null && 
                    resource.data.userId == request.auth.uid &&
                    request.resource.data.userId == request.auth.uid;
      
      // Allow delete if user is authenticated and is the owner
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Chat History - users can read messages related to their chatbots
    match /chat_history/{messageId} {
      // Allow read if user is authenticated and the agent_id belongs to one of their chatbots
      allow read: if request.auth != null && 
                    get(/databases/$(database)/documents/chatbots/$(resource.data.agent_id)).data.userId == request.auth.uid;
      
      // Disallow write/update/delete from client-side for now
      // Writes should ideally happen from a trusted backend/serverless function
      allow create, update, delete: if false;
    }
  }
}