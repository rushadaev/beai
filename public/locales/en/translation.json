{
  "header": {
    "title": "Header Placeholder",
    "nav": {
      "features": "Features",
      "howItWorks": "How It Works",
      "faq": "FAQ"
    },
    "auth": {
      "dashboard": "Dashboard",
      "login": "Login",
      "signUp": "Sign Up"
    }
  },
  "hero": {
    "title": {
      "line1": "Multi-Agent",
      "accent": "Constructor",
      "line2": "Powerful API Integrations"
    },
    "subtitle": "Build advanced AI agent systems with powerful API integrations, multi-agent collaboration, and custom tools - all through an intuitive no-code interface.",
    "cta": {
      "create": "Create Your Agent System",
      "tryFree": "Try for Free"
    }
  },
  "faq": {
    "header": {
      "eyebrow": "Interactive Demo",
      "title": "See Agents in Action",
      "description": "Explore real-world examples of what your AI agents can accomplish"
    },
    "demos": {
      "knowledgeAgent": {
        "title": "Document Search & Memory",
        "exchanges": [
          {
            "user": "How do I set up document search for my product manuals?",
            "agent": "I'd be happy to explain! You can add the 'File Search' tool to your agent. Upload your documents to create a searchable database, and the agent will find relevant information when asked."
          },
          {
            "user": "Great, I've done that. What did I ask about pricing earlier?",
            "agent": "Looking at our conversation history... You previously asked about Enterprise tier pricing. The File Search tool found in your 'pricing.pdf' document that it starts at $99/month."
          },
          {
            "user": "Perfect, thanks!",
            "agent": "You're welcome! The built-in conversation memory helps me keep track of our discussion, while the File Search tool finds specific details from your documents."
          }
        ]
      },
      "researchAgent": {
        "title": "Web Research & Task Handoff",
        "exchanges": [
          {
            "user": "I need to create an agent that researches AI trends and summarizes them.",
            "agent": "That's straightforward! Create a 'research agent' with the 'Web Search' tool enabled so it can find the latest information about AI trends online."
          },
          {
            "user": "How can I make it provide just a summary?",
            "agent": "After your research agent gathers information using Web Search, set it up to pass those findings to a 'summary agent'. In the instructions for the summary agent, specify that its job is to condense information into brief highlights."
          },
          {
            "user": "So one agent does the research and another creates the summary?",
            "agent": "Exactly! That's the beauty of a multi-agent system. Each agent does what it's best at: the first one handles research, and the second one analyzes and condenses that information into what's most important."
          }
        ]
      },
      "customApiAgent": {
        "title": "Custom System Integration",
        "exchanges": [
          {
            "user": "Can I make an agent that checks order status from our internal system?",
            "agent": "Absolutely! Create a 'Custom Function Tool' in the builder. Define parameters (like 'order_number') and configure the connection to your internal order system through its API."
          },
          {
            "user": "Is that secure? How do I handle my API key?",
            "agent": "It's completely secure. Configure the tool to use environment variables (like 'API_KEY') for authentication headers. This way, your key is never visible in the configuration settings."
          },
          {
            "user": "So the agent can just pull data through our API?",
            "agent": "Yes, that's right. When a customer asks about their order status and provides the number, your agent will use the Custom Tool you built, securely connect to your system, and return the current status to the customer."
          }
        ]
      }
    }
  },
  "visualBuilder": {
    "header": {
      "eyebrow": "Agent Constructor",
      "title": "Build powerful multi-agent systems"
    },
    "windowTitle": "VibeCraft Agent Constructor",
    "placeholder": {
      "title": "Agent Construction Interface",
      "description": "Configure multi-agent systems, API integrations, and custom tools without coding"
    }
  },
  "features": {
    "header": {
      "eyebrow": "Features",
      "title": "Powerful Agent Construction System",
      "description": "Build sophisticated multi-agent systems with powerful tools and API integrations"
    },
    "list": {
      "multiAgent": {
        "title": "Multi-Agent Architecture",
        "description": "Build sophisticated systems with multiple specialized agents that can collaborate and hand off tasks to each other."
      },
      "apiBuilder": {
        "title": "API Integration Builder",
        "description": "Create custom API tools with dynamic parameters, templates, and configurations without writing any code."
      },
      "contextualMemory": {
        "title": "Contextual Memory",
        "description": "Define custom context classes to maintain state and user information across conversations with configurable attributes."
      },
      "tools": {
        "title": "Built-in & Custom Tools",
        "description": "Extend your agents with both pre-built tools and custom functions, from web search to specialized API integrations."
      },
      "routing": {
        "title": "Intelligent Routing",
        "description": "Set up router agents to direct conversations and hand off tasks between specialized agents for complex workflows."
      },
      "testing": {
        "title": "Advanced Testing & Preview",
        "description": "Test your agent configurations directly in the builder and preview responses before deploying to production."
      }
    }
  },
  "howItWorks": {
    "header": {
      "eyebrow": "How It Works",
      "title": "Build your multi-agent system in three steps",
      "description": "Create sophisticated AI systems with powerful API integrations"
    },
    "steps": {
      "configure": {
        "title": "Configure Your Agent System",
        "description": "Define your system settings, context class, and create specialized agents with specific instructions."
      },
      "addTools": {
        "title": "Add Tools & API Integrations",
        "description": "Extend your agents with built-in tools, create custom API calls, and set up agent-to-agent handoffs."
      },
      "testDeploy": {
        "title": "Test & Deploy",
        "description": "Test your agent system with the built-in testing interface, then deploy with simple API endpoints."
      }
    }
  },
  "cta": {
    "title": {
      "part1": "Ready to build AI agents",
      "accent": "without code"
    },
    "subtitle": "Get started today and transform how you engage with your audience.",
    "button": "Start Building Now"
  },
  "footer": {
    "copyright": "Â© 2024 VibeCraft. All rights reserved."
  },
  "dashboard": {
    "layout": {
      "loading": "Loading your dashboard...",
      "title": "Dashboard",
      "logout": "Logout"
    },
    "sidebar": {
      "home": "Home",
      "insights": "Insights",
      "history": "History",
      "chatbots": "Chatbots"
    },
    "editor": {
      "tabs": {
        "agent": "Agent",
        "appearance": "Appearance",
        "rules": "Rules",
        "suggestions": "Suggestions"
      },
      "preview": {
        "title": "Live Preview"
      },
      "appearance": {
        "title": "Appearance Settings",
        "description": "Customize how your chatbot appears to users",
        "defaults": {
          "headerText": "Chat with us"
        },
        "headerTextLabel": "Header Text",
        "sizeLabel": "Size",
        "size": {
          "small": "Small",
          "medium": "Medium",
          "large": "Large"
        },
        "placementLabel": "Placement",
        "placement": {
          "left": "Left",
          "center": "Center",
          "right": "Right"
        },
        "primaryColorLabel": "Primary Color",
        "secondaryColorLabel": "Secondary Color",
        "buttonColorLabel": "Button Color",
        "buttonTextColorLabel": "Button Text Color",
        "previewNote": "Changes appear in the preview immediately.",
        "applyButton": "Apply Changes",
        "savingButton": "Saving...",
        "installButton": "Install"
      },
      "rules": {
        "title": "Chatbot Rules",
        "description": "Define rules that will guide how your chatbot responds to users",
        "defaults": {
          "0": "Be friendly and helpful",
          "1": "Do not share personal information",
          "2": "Keep responses concise"
        },
        "addPlaceholder": "Add a new rule...",
        "addButton": "Add",
        "noRules": "No rules yet. Add some to guide your chatbot behavior.",
        "saveEditButton": "Save",
        "cancelEditButton": "Cancel",
        "moveUpTitle": "Move up",
        "moveDownTitle": "Move down",
        "editTitle": "Edit",
        "deleteTitle": "Delete",
        "previewNote": "Changes appear in the preview immediately.",
        "applyButton": "Apply Changes",
        "savingButton": "Saving...",
        "installButton": "Install"
      },
      "suggestions": {
        "title": "Suggested Questions",
        "description": "Add questions that will appear as suggestions to your users",
        "defaults": {
          "0": "How can I get started?",
          "1": "What are your business hours?",
          "2": "Do you offer support?"
        },
        "addPlaceholder": "Add a new suggested question...",
        "addButton": "Add",
        "noSuggestions": "No suggested questions yet. Add some to help your users get started.",
        "saveEditButton": "Save",
        "cancelEditButton": "Cancel",
        "moveUpTitle": "Move up",
        "moveDownTitle": "Move down",
        "editTitle": "Edit",
        "deleteTitle": "Delete",
        "previewNote": "Changes appear in the preview immediately.",
        "applyButton": "Apply Changes",
        "savingButton": "Saving...",
        "installButton": "Install"
      },
      "agent": {
        "title": "Agent Configuration",
        "systemSettings": {
          "title": "System Settings",
          "systemNameLabel": "System Name",
          "defaultModelLabel": "Default Model",
          "contextClassNameLabel": "Context Class Name",
          "contextAttributesLabel": "Context Attributes",
          "contextClassTitle": "Context Class Settings",
          "contextAttributesTitle": "Context Attributes",
          "workflowTypeLabel": "Workflow Type",
          "workflowTypeDescription": "Determines how agent interactions are handled",
          "workflowTypes": {
            "simple_router": "Simple Router",
            "judge_loop": "Judge Loop"
          },
          "judgeLoop": {
            "title": "Judge Loop Configuration",
            "outputTypeWillBeAdded": "Default evaluation output type will be applied to this agent",
            "generatorAgentLabel": "Generator Agent",
            "generatorAgentDescription": "Agent that produces content based on user input",
            "evaluatorAgentLabel": "Evaluator Agent",
            "evaluatorAgentDescription": "Agent that evaluates the generator's output",
            "maxIterationsLabel": "Maximum Iterations",
            "maxIterationsDescription": "Maximum number of improvement cycles before returning result",
            "passFieldLabel": "Evaluation Pass Field",
            "passFieldDescription": "Field name in evaluator output that indicates pass/fail status",
            "passValueLabel": "Pass Value",
            "passValueDescription": "Value that indicates a passing evaluation",
            "feedbackFieldLabel": "Feedback Field",
            "feedbackFieldDescription": "Field name in evaluator output that contains improvement feedback"
          },
          "addAttributeButton": "+ Add Attribute",
          "noAttributes": "No attributes defined",
          "attributeNamePlaceholder": "Name",
          "attributeDefaultPlaceholder": "Default (optional)",
          "removeAttributeTitle": "Remove Attribute"
        },
        "agentsSection": {
          "title": "Agents",
          "addAgentButton": "+ Add Agent",
          "routerAgentLabel": "Router Agent",
          "deleteAgentTitle": "Delete Agent",
          "deleteAgentButton": "Delete",
          "instructionsLabel": "Instructions",
          "modelLabel": "Model (optional, defaults to system)",
          "modelUseDefaultOption": "Use Default ({{model}})",
          "handoffDescriptionLabel": "Handoff Description (optional)",
          "handoffDescriptionPlaceholder": "Description of when to handoff to this agent",
          "availableHandoffsLabel": "Available Handoffs",
          "noHandoffsAvailable": "No other agents available for handoff",
          "outputType": {
            "title": "Structured Output Type",
            "description": "Define a structured JSON output format for this agent, useful for function calling or structured data extraction.",
            "defineButton": "Define Structured Output",
            "removeButton": "Remove Output Type",
            "removeTooltip": "Remove structured output configuration",
            "typeName": "Type Name",
            "typeNamePlaceholder": "e.g., UserFeedback or TaskDetails",
            "typeNameHelp": "A descriptive name for this output type (PascalCase recommended)",
            "properties": "Properties",
            "addProperty": "+ Add Property",
            "noProperties": "No properties defined yet. Add properties to define the structure.",
            "propertyForm": {
              "name": "Property Name",
              "namePlaceholder": "e.g., feedback or task_name (snake_case recommended)",
              "type": "Type",
              "description": "Description",
              "descriptionPlaceholder": "e.g., User's feedback on the interaction",
              "enumValues": "Enum Values (comma separated)",
              "enumValuesPlaceholder": "e.g., pass, needs_improvement, fail",
              "enumValuesHelp": "Restrict possible string values (leave empty if any string is allowed)",
              "required": "This property is required in the output",
              "cancel": "Cancel",
              "add": "Add Property",
              "removePropertyTitle": "Remove Property"
            },
            "useTemplate": "Use Evaluator Template",
            "useTemplateTooltip": "Apply default schema for Judge Loop evaluation"
          }
        },
        "toolsSection": {
          "title": "Agent Tools",
          "addBuiltInButton": "+ Built-in Tool",
          "addApiCallButton": "+ API Call",
          "addAgentToolButton": "+ Agent Tool",
          "noTools": "No tools defined",
          "agentToolType": "Agent",
          "builtInToolType": "Built-in",
          "apiCallToolType": "API Call",
          "editToolTitle": "Edit Tool",
          "removeToolTitle": "Remove Tool",
          "unknownToolType": "Unknown Tool",
          "parametersLabel": "Params",
          "apiLabel": "API",
          "fileSearch": {
            "vectorStoreIdLabel": "Vector Store ID",
            "noVectorStoreId": "No vector store associated",
            "createVectorStoreButton": "Create/Upload Files",
            "updateVectorStoreButton": "Update/Re-upload Files",
            "uploadingButton": "Uploading...",
            "noFilesSelected": "No files selected.",
            "uploading": "Uploading files...",
            "uploadSuccess": "Vector Store created/updated successfully.",
            "uploadErrorGeneric": "An error occurred during file upload.",
            "missingVectorStoreId": "API response did not contain a vector_store_id.",
            "toolUpdateError": "Could not update the tool configuration after upload.",
            "uploadErrorLabel": "Upload Error"
          },
          "toolSelectionModal": {
          }
        },
        "testingSection": {
          "title": "Agent Testing",
          "noteLabel": "Note",
          "saveNote": "Agent configuration must be saved before testing.",
          "warningLabel": "Warning",
          "unsavedWarning": "You have unsaved changes. Save the configuration to test the latest changes.",
          "testMessageLabel": "Test Message",
          "testMessagePlaceholder": "Enter a message to test the agent...",
          "inputPlaceholder": "Enter a message to test the agent...",
          "testButton": "Test",
          "sendButton": "Send",
          "testingButton": "Testing...",
          "saveFirstTooltip": "Save configuration first",
          "responseLabel": "Response",
          "testError": "Error: Could not get response from agent"
        },
        "apiEndpoints": {
          "title": "API Endpoint",
          "description": "Use this endpoint to send messages to your agent from your applications.",
          "sendMessageLabel": "Send message to agent",
          "exampleBodyLabel": "Example Request Body",
          "copyTooltip": "Copy to clipboard"
        },
        "toolModal": {
          "addTitle": "Add Tool",
          "editTitle": "Edit Tool",
          "closeTooltip": "Close",
          "toolTypeLabel": "Tool Type",
          "builtInButton": "Built-in",
          "apiCallButton": "API Call",
          "agentToolButton": "Agent Tool",
          "selectBuiltInLabel": "Select built-in tool",
          "selectToolOption": "Select a tool...",
          "selectAgentToolLabel": "Select agent to use as tool",
          "selectAgentOption": "Select an agent..."
        },
        "saveButtonSaving": "Saving...",
        "saveButtonUnsaved": "Save Configuration",
        "saveButtonSaved": "Configuration Saved",
        "apiConfigModal": {
          "addTitle": "Add API Call",
          "editTitle": "Edit API Call",
          "closeTooltip": "Close",
          "tabs": {
            "basicInfo": "Basic Info",
            "parameters": "Parameters",
            "apiConfiguration": "API Configuration"
          },
          "basicInfo": {
            "toolNameLabel": "Tool Name",
            "toolNamePlaceholder": "create_task",
            "toolNameHelpText": "Name should be snake_case and describe what the API call does",
            "descriptionLabel": "Description",
            "descriptionPlaceholder": "Create a new task for a user",
            "descriptionHelpText": "Clearly describe what this API call does and when it should be used"
          },
          "parameters": {
            "title": "Parameters",
            "allowAdditionalLabel": "Allow Additional Parameters",
            "table": {
              "headerParam": "Parameter",
              "headerType": "Type",
              "headerRequired": "Required",
              "headerDescription": "Description",
              "requiredYes": "Yes",
              "requiredNo": "No",
              "removeParamTitle": "Remove Parameter",
              "noParams": "No parameters defined yet"
            },
            "addParamForm": {
              "title": "Add Parameter",
              "nameLabel": "Name",
              "namePlaceholder": "user_id",
              "typeLabel": "Type",
              "descriptionLabel": "Description",
              "descriptionPlaceholder": "The ID of the user",
              "enumLabel": "Enum Values (comma-separated)",
              "enumPlaceholder": "low, medium, high",
              "requiredLabel": "Parameter is required",
              "addButton": "Add Parameter"
            }
          },
          "apiConfig": {
            "methodLabel": "HTTP Method",
            "urlLabel": "API URL",
            "urlPlaceholder": "https://api.example.com/users/{user_id}",
            "urlHelpText": "Use \"{parameter_name}\" syntax to include parameter values in the URL",
            "headersTitle": "Headers",
            "headersTable": {
              "headerName": "Name",
              "headerValue": "Value",
              "removeHeaderTitle": "Remove Header",
              "noHeaders": "No headers defined yet"
            },
            "addHeaderForm": {
              "namePlaceholder": "Header Name",
              "valuePlaceholder": "Header Value",
              "addButton": "Add"
            },
            "queryParamsTitle": "Query Parameters",
            "queryParamsTable": {
              "headerName": "Name",
              "headerValue": "Value",
              "removeParamTitle": "Remove Query Parameter",
              "noParams": "No query parameters defined yet"
            },
            "addQueryParamForm": {
              "namePlaceholder": "Parameter Name",
              "valuePlaceholder": "Parameter Value or {template}",
              "addButton": "Add"
            },
            "queryParamsHelpText": "Use \"{parameter_name}\" syntax to include parameter values in query parameters",
            "bodyTemplateTitle": "Body Template (JSON)",
            "bodyTemplatePlaceholder": "{ \n  \"name\": \"{task_name}\", \n  \"priority\": \"{priority}\" \n}",
            "validateJsonButton": "Validate JSON",
            "bodyTemplateHelpText": "Use \"{parameter_name}\" syntax to include parameter values in the body template",
            "responseTemplateTitle": "Response Template (JSON)",
            "responseTemplatePlaceholder": "{ \n  \"id\": \"task_123\", \n  \"name\": \"{task_name}\", \n  \"user_id\": \"{user_id}\" \n}",
            "responseTemplateHelpText": "Use \"{parameter_name}\" syntax to display parameters in the response template"
          },
          "actions": {
            "cancelButton": "Cancel",
            "addButton": "Add API Call",
            "updateButton": "Update API Call"
          },
          "alerts": {
            "invalidBodyJson": "Invalid JSON for Body Template: {{message}}",
            "invalidResponseJson": "Invalid JSON for Response Template: {{message}}",
            "toolNameRequired": "Tool name is required",
            "apiUrlRequired": "API URL is required",
            "invalidTemplateJson": "Invalid JSON in templates: {{message}}"
          }
        }
      }
    },
    "overview": {
      "welcome": "Welcome, {{name}}",
      "defaultUser": "User",
      "subtitle": "Dashboard overview and quick actions",
      "stats": {
        "activeChatbots": "Active Chatbots",
        "totalConversations": "Total Conversations",
        "userSatisfaction": "User Satisfaction",
        "messagesExchanged": "Messages Exchanged"
      },
      "quickActions": {
        "title": "Quick Actions",
        "editChatbot": "Edit Chatbot",
        "viewInsights": "View Insights",
        "addKnowledge": "Add Knowledge Source"
      },
      "progress": {
        "title": "Progress Tracker",
        "setup": {
          "label": "Setup Your AI Chatbot",
          "status": "{{completed}}/{{total}} completed"
        },
        "share": {
          "label": "Share Your Chatbot To The World",
          "status": "{{completed}}/{{total}} completed"
        },
        "track": {
          "label": "Track Your Chatbot Insights",
          "status": "{{completed}}/{{total}} completed"
        },
        "continueButton": "Continue Setup"
      },
      "recentConversations": {
        "title": "Recent Conversations",
        "header": {
          "user": "User",
          "date": "Date",
          "messages": "Messages",
          "action": "Action"
        },
        "viewButton": "View",
        "viewAllLink": "View all conversations"
      }
    },
    "chatbots": {
      "title": "My Chatbots",
      "subtitle": "Create and manage your AI chatbots",
      "createButton": "Create New Chatbot",
      "deleteConfirm": "Are you sure you want to delete this chatbot?",
      "lastUpdated": "Last updated: {{date}}",
      "editButtonTitle": "Edit Chatbot",
      "deleteButtonTitle": "Delete Chatbot",
      "createForm": {
        "title": "Create New Chatbot",
        "nameLabel": "Chatbot Name",
        "namePlaceholder": "Enter a name for your chatbot",
        "createButton": "Create Chatbot",
        "creatingButton": "Creating...",
        "cancelButton": "Cancel"
      },
      "noChatbots": {
        "title": "No Chatbots Yet",
        "description": "Create your first chatbot to start engaging with your visitors",
        "createButton": "Create Your First Chatbot"
      },
      "errors": {
        "load": "Failed to load chatbots. Please try again.",
        "create": "Failed to create chatbot. Please try again.",
        "delete": "Failed to delete chatbot. Please try again.",
        "generic": "An error occurred. Please try again."
      }
    },
    "history": {
      "title": "Conversation History",
      "subtitle": "View and analyze past user interactions with your chatbot",
      "filters": {
        "status": {
          "all": "All",
          "completed": "Completed",
          "abandoned": "Abandoned"
        },
        "searchPlaceholder": "Search conversations...",
        "sort": {
          "recent": "Recent First",
          "oldest": "Oldest First",
          "duration": "Duration (Longest)",
          "messages": "Messages (Most)"
        }
      },
      "table": {
        "header": {
          "user": "User",
          "started": "Started",
          "duration": "Duration",
          "messages": "Messages",
          "status": "Status",
          "actions": "Actions"
        },
        "status": {
          "completed": "Completed",
          "abandoned": "Abandoned"
        },
        "actions": {
          "view": "View",
          "export": "Export"
        }
      },
      "pagination": {
        "showing": "Showing {{start}} to {{end}} of {{total}} conversations",
        "previous": "Previous",
        "next": "Next"
      },
      "preview": {
        "title": "Conversation with {{user}}",
        "viewTranscriptButton": "View Full Transcript",
        "startedLabel": "Started",
        "durationLabel": "Duration",
        "messagesLabel": "Messages",
        "statusLabel": "Status",
        "status": {
          "completed": "Completed",
          "abandoned": "Abandoned"
        },
        "message": {
          "user": "User",
          "bot": "Bot"
        }
      }
    },
    "insights": {
      "title": "Insights",
      "subtitle": "Analytics and performance metrics for your chatbot",
      "overview": {
        "title": "Performance Overview",
        "timeRanges": {
          "day": "Day",
          "week": "Week",
          "month": "Month",
          "year": "Year"
        }
      },
      "stats": {
        "totalConversations": "Total Conversations",
        "avgLength": "Avg. Conversation Length",
        "satisfaction": "User Satisfaction",
        "responseRate": "Response Rate",
        "changeTimeRange": "{{change}} from last {{timeRange}}"
      },
      "charts": {
        "volume": {
          "title": "Conversation Volume",
          "tooltip": "{{count}} conversations",
          "days": {
            "mon": "Mon",
            "tue": "Tue",
            "wed": "Wed",
            "thu": "Thu",
            "fri": "Fri",
            "sat": "Sat",
            "sun": "Sun"
          }
        },
        "satisfaction": {
          "title": "User Satisfaction",
          "label": "Satisfied Users"
        }
      },
      "topQuestions": {
        "title": "Top Questions",
        "table": {
          "header": {
            "question": "Question",
            "frequency": "Frequency",
            "responseTime": "Avg. Response Time",
            "satisfaction": "Satisfaction"
          }
        }
      }
    },
    "account": {
      "title": "Account Settings",
      "subtitle": "Manage your account preferences and settings",
      "tabs": {
        "profile": "Profile",
        "security": "Security",
        "preferences": "Preferences"
      },
      "messages": {
        "saveSuccess": "Changes saved successfully!"
      },
      "buttons": {
        "saving": "Saving...",
        "saveChanges": "Save Changes",
        "updating": "Updating...",
        "updatePassword": "Update Password",
        "loggingOut": "Logging Out...",
        "logOutAll": "Log Out All Devices",
        "savePreferences": "Save Preferences"
      },
      "profile": {
        "title": "Personal Information",
        "defaultUser": "User",
        "memberSince": "Member since {{date}}",
        "firstNameLabel": "First Name",
        "firstNamePlaceholder": "Enter your first name",
        "lastNameLabel": "Last Name",
        "lastNamePlaceholder": "Enter your last name",
        "emailLabel": "Email Address",
        "emailHelpText": "Your email address cannot be changed",
        "companyNameLabel": "Company Name",
        "companyNamePlaceholder": "Enter your company name"
      },
      "security": {
        "changePasswordTitle": "Change Password",
        "currentPasswordLabel": "Current Password",
        "currentPasswordPlaceholder": "Enter your current password",
        "newPasswordLabel": "New Password",
        "newPasswordPlaceholder": "Enter your new password",
        "passwordComplexityHelpText": "Must be at least 8 characters and include a letter, a number, and a special character",
        "confirmPasswordLabel": "Confirm New Password",
        "confirmPasswordPlaceholder": "Confirm your new password",
        "twoFactor": {
          "title": "Two-Factor Authentication",
          "subtitle": "Enhance your account security",
          "description": "Enable two-factor authentication to add an extra layer of security to your account",
          "comingSoonButton": "Coming Soon"
        },
        "access": {
          "title": "Account Access",
          "deviceInfo": "{{browser}} on {{os}}",
          "lastActive": "Last active: {{date}}",
          "currentDevice": "Current",
          "logoutNote": "Note: This will sign you out from your current session"
        },
        "googleAccount": {
          "title": "Google Account Detected",
          "message": "Your account uses Google authentication. To change your password, please visit your Google account settings.",
          "link": "Go to Google Account Settings"
        },
        "messages": {
          "passwordUpdateSuccess": "Password updated successfully!"
        },
        "errors": {
          "currentPasswordRequired": "Current password is required",
          "newPasswordRequired": "New password is required",
          "passwordsDoNotMatch": "New passwords do not match",
          "passwordComplexity": "Password must be at least 8 characters and include a letter, a number, and a special character",
          "updateFailed": "Failed to update password",
          "unexpectedError": "An unexpected error occurred"
        }
      },
      "preferences": {
        "title": "Notification Settings",
        "notifications": {
          "newChats": {
            "title": "New Conversations",
            "description": "Receive notifications when users start new conversations"
          },
          "chatUpdates": {
            "title": "Chat Updates",
            "description": "Get notified about new messages in your conversations"
          },
          "monthlyReport": {
            "title": "Monthly Report",
            "description": "Receive a monthly summary of your account activity"
          },
          "productUpdates": {
            "title": "Product Updates",
            "description": "Get notified about new features and improvements"
          }
        }
      }
    },
    "installModal": {
      "title": "Install Your Chatbot",
      "description": "Copy the code below and paste it into your website to install the chatbot.",
      "copyButton": "Copy",
      "copiedButton": "Copied!",
      "codePlacementHelp": "Add this code to the <head> or <body> section of your website.",
      "integrations": {
        "title": "Integration Options",
        "point1": "Works with any website or platform that allows custom HTML",
        "point2": "Real-time conversation with your AI agent",
        "point3": "All your configured appearance settings and tools are applied"
      },
      "closeButton": "Close"
    }
  },
  "chatWidget": {
    "initialMessage": "Hello! How can I help you today?",
    "errorMessage": "Sorry, I encountered an error processing your request.",
    "resetButton": "Reset",
    "inputPlaceholder": "Type your message...",
    "sendButton": "Send"
  }
} 